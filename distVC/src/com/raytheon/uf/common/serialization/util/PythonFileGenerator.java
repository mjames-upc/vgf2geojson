/*     */ package com.raytheon.uf.common.serialization.util;
/*     */ 
/*     */ import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;
/*     */ import java.io.BufferedReader;
/*     */ import java.io.File;
/*     */ import java.io.FileNotFoundException;
/*     */ import java.io.FileReader;
/*     */ import java.io.FileWriter;
/*     */ import java.io.IOException;
/*     */ import java.io.PrintStream;
/*     */ import java.lang.reflect.Field;
/*     */ import java.util.ArrayList;
/*     */ import java.util.Collections;
/*     */ import java.util.List;
/*     */ 
/*     */ public class PythonFileGenerator
/*     */ {
/*     */   private static final String NEW_LINE = "\n";
/*     */   private static final String INDENT = "    ";
/*     */   private static final String COMMENT = "# ";
/*     */   private static final String INIT_FILE = "__init__.py";
/*     */ 
/*     */   public static void generateFile(File destDir, Class<?> clz, String header)
/*     */     throws IOException
/*     */   {
/*  68 */     String name = clz.getName();
/*  69 */     String shortname = name.substring(name.lastIndexOf('.') + 1);
/*  70 */     System.out.println(shortname);
/*  71 */     if (name.contains("$")) {
/*  72 */       System.out.println("Inner classes not supported");
/*  73 */       System.exit(0);
/*     */     }
/*     */ 
/*  76 */     File parentFile = destDir;
/*     */ 
/*  78 */     String[] packages = name.split("[.]");
/*     */ 
/*  80 */     for (int i = 0; i < packages.length - 1; i++) {
/*  81 */       File packageFile = new File(parentFile, packages[i]);
/*  82 */       if ((packageFile.exists()) && (!packageFile.isDirectory())) {
/*  83 */         packageFile.delete();
/*     */       }
/*  85 */       packageFile.mkdir();
/*     */ 
/*  87 */       createInitFile(header, parentFile);
/*     */ 
/*  89 */       parentFile = packageFile;
/*     */     }
/*     */ 
/*  92 */     FileWriter fw = new FileWriter(new File(parentFile, shortname + ".py"), 
/*  93 */       false);
/*  94 */     fw.write(header);
/*  95 */     fw.write("\n");
/*  96 */     fw.write("# ");
/*  97 */     fw.write("File auto-generated against equivalent DynamicSerialize Java class");
/*  98 */     fw.write("\n");
/*  99 */     fw.write("\n");
/* 100 */     fw.write("class " + shortname + "(object):");
/* 101 */     fw.write("\n");
/* 102 */     fw.write("\n");
/*     */ 
/* 104 */     List fields = getSerializedFields(clz);
/*     */ 
/* 106 */     fw.write("    ");
/* 107 */     fw.write("def __init__(self):");
/* 108 */     fw.write("\n");
/* 109 */     for (String s : fields) {
/* 110 */       fw.write("    ");
/* 111 */       fw.write("    ");
/* 112 */       fw.write("self.");
/* 113 */       fw.write(s);
/* 114 */       fw.write(" = None");
/* 115 */       fw.write("\n");
/*     */     }
/*     */ 
/* 118 */     fw.write("\n");
/* 119 */     for (String s : fields) {
/* 120 */       String title = s.substring(0, 1).toUpperCase() + s.substring(1);
/* 121 */       fw.write("    ");
/* 122 */       fw.write("def get");
/* 123 */       fw.write(title);
/* 124 */       fw.write("(self):");
/* 125 */       fw.write("\n");
/* 126 */       fw.write("    ");
/* 127 */       fw.write("    ");
/* 128 */       fw.write("return self.");
/* 129 */       fw.write(s);
/* 130 */       fw.write("\n");
/* 131 */       fw.write("\n");
/*     */ 
/* 133 */       fw.write("    ");
/* 134 */       fw.write("def set");
/* 135 */       fw.write(title);
/* 136 */       fw.write("(self, ");
/* 137 */       fw.write(s);
/* 138 */       fw.write("):");
/* 139 */       fw.write("\n");
/* 140 */       fw.write("    ");
/* 141 */       fw.write("    ");
/* 142 */       fw.write("self.");
/* 143 */       fw.write(s);
/* 144 */       fw.write(" = ");
/* 145 */       fw.write(s);
/* 146 */       fw.write("\n");
/* 147 */       fw.write("\n");
/*     */     }
/*     */ 
/* 150 */     fw.flush();
/* 151 */     fw.close();
/*     */ 
/* 153 */     createInitFile(header, parentFile);
/*     */   }
/*     */ 
/*     */   private static void createInitFile(String header, File dir) throws IOException
/*     */   {
/* 158 */     File initFile = new File(dir, "__init__.py");
/* 159 */     initFile.delete();
/* 160 */     FileWriter fw = new FileWriter(initFile, false);
/* 161 */     fw.write(header);
/* 162 */     fw.write("\n");
/* 163 */     fw.write("# ");
/* 164 */     fw.write("File auto-generated by PythonFileGenerator");
/* 165 */     fw.write("\n");
/* 166 */     fw.write("\n");
/* 167 */     fw.write("__all__ = [");
/* 168 */     fw.write("\n");
/*     */ 
/* 170 */     File[] files = dir.listFiles();
/* 171 */     List dirs = new ArrayList();
/* 172 */     List pythonFiles = new ArrayList();
/*     */     File file;
/* 174 */     for (int i = 0; i < 2; i++) {
/* 175 */       for (file : files) {
/* 176 */         String fileName = file.getName();
/* 177 */         if ((i == 0) && (file.isDirectory()) && (!file.isHidden())) {
/* 178 */           dirs.add(fileName);
/* 179 */         } else if ((i == 1) && (fileName.endsWith(".py")) && 
/* 180 */           (!fileName.equals("__init__.py"))) {
/* 181 */           dirs.add(fileName.substring(0, fileName.length() - 3));
/* 182 */           pythonFiles
/* 183 */             .add(fileName.substring(0, fileName.length() - 3));
/*     */         }
/*     */       }
/*     */     }
/*     */ 
/* 188 */     Collections.sort(dirs);
/* 189 */     Collections.sort(pythonFiles);
/*     */ 
/* 191 */     for (int j = 0; j < dirs.size(); j++) {
/* 192 */       fw.write("            ");
/* 193 */       fw.write("'");
/* 194 */       fw.write((String)dirs.get(j));
/* 195 */       fw.write("'");
/* 196 */       if (j < dirs.size() - 1) {
/* 197 */         fw.write(",");
/*     */       }
/* 199 */       fw.write("\n");
/*     */     }
/*     */ 
/* 202 */     fw.write("          ]");
/* 203 */     fw.write("\n");
/* 204 */     fw.write("\n");
/*     */ 
/* 206 */     for (String pythonFile : pythonFiles) {
/* 207 */       fw.write("from " + pythonFile + " import " + pythonFile);
/* 208 */       fw.write("\n");
/*     */     }
/* 210 */     fw.write("\n");
/*     */ 
/* 212 */     fw.flush();
/* 213 */     fw.close();
/*     */   }
/*     */ 
/*     */   public static List<String> getSerializedFields(Class<?> clz) {
/* 217 */     List list = new ArrayList();
/* 218 */     while (clz != null) {
/* 219 */       Field[] fields = clz.getDeclaredFields();
/* 220 */       for (Field f : fields) {
/* 221 */         Object ann = f.getAnnotation(DynamicSerializeElement.class);
/* 222 */         if (ann != null) {
/* 223 */           list.add(f.getName());
/*     */         }
/*     */       }
/* 226 */       clz = clz.getSuperclass();
/*     */     }
/*     */ 
/* 229 */     return list;
/*     */   }
/*     */ 
/*     */   public static void main(String[] args)
/*     */     throws Exception
/*     */   {
/* 236 */     String fileToRead = null;
/* 237 */     String destDir = null;
/*     */ 
/* 239 */     for (int i = 0; i < args.length; i++) {
/* 240 */       if ((args[i].equals("-f")) && (i < args.length - 1))
/* 241 */         fileToRead = args[(++i)];
/* 242 */       else if ((args[i].equals("-d")) && (i < args.length - 1)) {
/* 243 */         destDir = args[(++i)];
/*     */       }
/*     */     }
/*     */ 
/* 247 */     if (fileToRead == null) {
/* 248 */       System.err
/* 249 */         .println("Pass in file to read classes in from using -f <filepath> argument");
/* 250 */       System.exit(1);
/*     */     }
/*     */ 
/* 253 */     File readFile = new File(fileToRead);
/* 254 */     File destFile = null;
/*     */ 
/* 256 */     if (destDir == null) {
/* 257 */       System.out
/* 258 */         .println("No destination directory specified, specify with -d <dir> argument");
/*     */ 
/* 260 */       File tmp = File.createTempFile("tmp", "");
/* 261 */       destFile = new File(tmp.getParentFile(), "python");
/* 262 */       tmp.delete();
/*     */ 
/* 264 */       if ((destFile.exists()) && (!destFile.isDirectory())) {
/* 265 */         destFile.delete();
/*     */       }
/* 267 */       destFile.mkdirs();
/*     */     } else {
/* 269 */       destFile = new File(destDir);
/* 270 */       if ((destFile.exists()) && (!destFile.isDirectory())) {
/* 271 */         System.err
/* 272 */           .println("Can not write to destination directory, it is already a file");
/* 273 */         System.exit(2);
/*     */       }
/* 275 */       destFile.mkdirs();
/*     */     }
/*     */ 
/* 279 */     System.out.println("Reading class list file: " + 
/* 280 */       readFile.getAbsolutePath());
/* 281 */     System.out.println("Writing python file to " + 
/* 282 */       destFile.getAbsolutePath());
/*     */     try
/*     */     {
/* 285 */       BufferedReader br = new BufferedReader(new FileReader(readFile));
/*     */       String line;
/* 287 */       while ((line = br.readLine()) != null)
/*     */       {
/*     */         String line;
/* 288 */         if (!"".equals(line.trim()))
/*     */         {
/* 291 */           Class c = null;
/*     */           try {
/* 293 */             c = Class.forName(line);
/*     */           } catch (ClassNotFoundException e1) {
/* 295 */             e1.printStackTrace();
/* 296 */             System.out.println("Class not found: " + line);
/* 297 */             continue;
/*     */           }
/*     */ 
/* 300 */           String header = null;
/*     */           try {
/* 302 */             header = getHeaderInfo();
/*     */           } catch (IOException e) {
/* 304 */             e.printStackTrace();
/* 305 */             System.exit(0);
/*     */           }
/*     */           try
/*     */           {
/* 309 */             generateFile(destFile, c, header);
/*     */           } catch (IOException e) {
/* 311 */             e.printStackTrace();
/*     */           }
/*     */         }
/*     */       }
/*     */     } catch (FileNotFoundException e2) {
/* 316 */       e2.printStackTrace();
/*     */     }
/*     */ 
/* 319 */     System.out.println("Classes generated");
/*     */   }
/*     */ 
/*     */   public static String getHeaderInfo() throws IOException {
/* 323 */     File file = new File(
/* 324 */       "../../cave/build/tools/headup/AWIPS/awipsHeader.txt");
/* 325 */     if (!file.exists()) {
/* 326 */       System.out
/* 327 */         .println("Unable to determine header information, skipping header");
/* 328 */       return "";
/*     */     }
/*     */ 
/* 331 */     BufferedReader br = new BufferedReader(new FileReader(file));
/* 332 */     StringBuffer sb = new StringBuffer();
/* 333 */     sb.append("##\n");
/* 334 */     String line = br.readLine();
/* 335 */     while (line != null) {
/* 336 */       sb.append("# ");
/* 337 */       sb.append(line);
/* 338 */       sb.append("\n");
/* 339 */       line = br.readLine();
/*     */     }
/* 341 */     sb.append("##\n");
/* 342 */     br.close();
/*     */ 
/* 344 */     return sb.toString();
/*     */   }
/*     */ }

/* Location:           /Users/mj/vgf2geojson/distVC/vgfConverter.jar
 * Qualified Name:     com.raytheon.uf.common.serialization.util.PythonFileGenerator
 * JD-Core Version:    0.6.2
 */